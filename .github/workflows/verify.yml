# This workflow runs the unit and system tests, as well as static code analysis
# and dependecy vulnerability checks.
#
# It uses the default MySQL database included in the runner (usually ubuntu-latest).
name: "Tests and code quality"
on:
  push:
    branches:
      - "**"
jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    env:
      RUBY_VERSION: '3.0.2'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.0
        with:
          node-version: 14
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: RuboCop
        run: bundle exec rubocop --parallel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Brakeman code scanning with reviewdog
        uses: reviewdog/action-brakeman@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bundler audit with reviewdog
        uses: tomferreira/action-bundler-audit@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      RUBY_VERSION: '3.0.2'
      DB_DATABASE: blacklight_test
      DB_USER: root
      DB_PASSWORD: root
      RAILS_ENV: test
      DATABASE_URL: "mysql2://root:root@localhost:3306/blacklight_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.0
        with:
          node-version: 14
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Unit tests
        run: |
          bin/rails test

      - name: System tests
        run: |
          bin/rails test:system
